{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Oblique;
\f3\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red109\green109\blue109;\red32\green32\blue32;\red191\green100\blue38;
\red254\green187\blue91;\red153\green168\blue186;\red86\green132\blue173;\red88\green118\blue71;}
{\*\expandedcolortbl;;\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c74902\c39216\c14902;
\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c33725\c51765\c67843;\csgenericrgb\c34510\c46275\c27843;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Pornind de la doua multimi A si B care contin 20 de elemente depuse in doua colectii separate si tinand cont de A x B = \{ .. \}, sa se scrie un program in Kotlin care va calcula (A x B) intersectat (B x A) (intesectat e U intors) utilizand functii specifice colectiilor si eventual lambda calcul urmatoarele. Rezultatul este depus intr-un dictionar iar acesta va fi afisat. \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb3 // pasi logici\
// 1. doua colectii A si B de cate 20 de elemente\
// 2. calculam A x B\
// 3. calculam B x A\
// 4. intersectat A x B si B x A\
// 5. depunem rezultatul intr-un map\
// 6. afisam rezultatul\
\
\cf4 fun \cf5 main\cf6 ()\{\
    \cf2 // pasul 1\
    \cf4 val \cf6 A = 
\f2\i List
\f1\i0 (\cf7 20\cf6 ) 
\f3\b \{ it \}\
    
\f1\b0 \cf4 val \cf6 B = 
\f2\i List
\f1\i0 (\cf7 20\cf6 ) 
\f3\b \{ it 
\f1\b0 + \cf7 10 
\f3\b \cf6 \}\
    
\f2\i\b0 println
\f1\i0 (\cf8 "Multimea A = \cf4 $\cf6 A\cf8 "\cf6 )\
    
\f2\i println
\f1\i0 (\cf8 "Multimea B = \cf4 $\cf6 B\cf8 "\cf6 )\
\
    \cf2 // pasul 2\
    \cf4 val \cf6 AxB = A.
\f2\i \cf5 flatMap 
\f3\i0\b \cf6 \{ 
\f1\b0 a 
\f3\b -> 
\f1\b0 B.
\f2\i \cf5 map 
\f3\i0\b \cf6 \{ 
\f1\b0 b 
\f3\b -> 
\f1\b0 a 
\f2\i \cf5 to 
\f1\i0 \cf6 b 
\f3\b \}\}
\f1\b0 .
\f2\i \cf5 toSet
\f1\i0 \cf6 ()\
    
\f2\i println
\f1\i0 (\cf8 "A x B = \cf4 $\cf6 AxB\cf8 "\cf6 )\
\
    \cf2 // pasul 3\
    \cf4 val \cf6 BxA = B.
\f2\i \cf5 flatMap 
\f3\i0\b \cf6 \{ 
\f1\b0 b 
\f3\b -> 
\f1\b0 A.
\f2\i \cf5 map 
\f3\i0\b \cf6 \{ 
\f1\b0 a 
\f3\b -> 
\f1\b0 b 
\f2\i \cf5 to 
\f1\i0 \cf6 a 
\f3\b \}\}
\f1\b0 .
\f2\i \cf5 toSet
\f1\i0 \cf6 ()\
    
\f2\i println
\f1\i0 (\cf8 "B x A = \cf4 $\cf6 BxA\cf8 "\cf6 )\
\
    \cf2 // pasul 4\
    \cf4 val \cf6 intersection = AxB.
\f2\i \cf5 intersect
\f1\i0 \cf6 (BxA)\
    
\f2\i println
\f1\i0 (\cf8 "intersectia = \cf4 $\cf6 intersection\cf8 "\cf6 )\
\
    \cf2 // pasul 5\
    \cf4 val \cf6 resultMap = intersection.
\f2\i \cf5 associateWith 
\f3\i0\b \cf6 \{ 
\f1\b0 \cf4 true 
\f3\b \cf6 \}\
    
\f2\i\b0 println
\f1\i0 (\cf8 "resultMap = \cf4 $\cf6 resultMap\cf8 "\cf6 )\
\
    \cf2 // pasul 6\
    
\f2\i \cf6 println
\f1\i0 (\cf8 "Elemente comune \'een A x B \uc0\u8745  B x A:"\cf6 )\
    resultMap.
\f2\i \cf5 forEach 
\f3\i0\b \cf6 \{ 
\f1\b0 (pair\cf4 , \cf6 value) 
\f3\b ->\
        
\f2\i\b0 println
\f1\i0 (\cf8 "\cf4 $\cf6 pair\cf8  -> \cf4 $\cf6 value\cf8 "\cf6 )\
    
\f3\b \}\
\

\f1\b0 \}\
}