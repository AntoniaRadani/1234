{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Oblique;
\f3\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;
\red109\green109\blue109;\red254\green187\blue91;\red88\green118\blue71;\red41\green50\blue40;\red133\green96\blue154;
\red86\green132\blue173;}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c16078\c19608\c15686;\csgenericrgb\c52157\c37647\c60392;
\csgenericrgb\c33725\c51765\c67843;}
\paperw11900\paperh16840\margl1440\margr1440\vieww7640\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Utilizand Kotlin functiile pentru procesare submultimi din se va prelua un fisier text (creat de programator cu cateva propozitii in el) si se vor extrage doua caractere din mijlocul cuvantului daca cuvantul are minim patru caractere. Se va utiliza combinatie cu lambda peste colectii pentru procesare\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb3 import \cf4 java.io.File\
\
\cf5 // se preia text dintr-un fisier si se extrag doua caractere din mijlocul cuvantului\
// daca cuv are minim 4 caractere\
// se va utiliza lambda\
\
\cf2 fun \cf6 main\cf4 ()\{\
\
    \cf2 val \cf4 filename : String = \cf7 "propozitii.txt"\
    \cf2 val \cf4 processedText = File(filename).
\f2\i \cf6 readLines
\f1\i0 \cf4 ()  \cf5 // citeste liniile\
        \cf4 .
\f2\i \cf6 flatMap
\f3\i0\b \cf4 \{it
\f1\b0 .
\f2\i \cf6 split
\f1\i0 \cf4 (\cf7 "\cf2 \cb8 \\\\\cf7 s+\cb3 "\cf4 .
\f2\i \cf6 toRegex
\f1\i0 \cf4 ())
\f3\b \}                      
\f1\b0 \cf5 // separa cuvintele\
        \cf4 .
\f2\i \cf6 map
\f3\i0\b \cf4 \{
\f1\b0 word 
\f3\b ->\
            
\f1\b0 \cf2 if\cf4 (word.\cf9 length \cf4 < \cf10 4\cf4 )\
                word\
            \cf2 else\
            \cf4 \{\
                \cf2 val \cf4 mid = word.\cf9 length \cf4 / \cf10 2\
                \cf4 word.
\f2\i \cf6 removeRange
\f1\i0 \cf4 (mid - \cf10 1\cf2 , \cf4 mid + \cf10 1\cf4 )\
            \}\
        
\f3\b \}
\f1\b0 .
\f2\i \cf6 joinToString 
\f3\i0\b \cf4 \{ it \}\
\
    
\f2\i\b0 println
\f1\i0 (processedText)\
\}\
}